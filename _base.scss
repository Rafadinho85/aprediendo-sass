//una variable es un contenedor donde guardo informacion
$fuente-tipica: sans-serif, Helvetica, Arial;
$color-fondo: #ccc;
$color-texto:  #ff0000;
$color-secundario: rgb(122, 20, 20);

.clearfix{
    
    clear: both;
}
//uso de variables
body{
    background-color: $color-fondo;
}
h1{
    font-family: $fuente-tipica;
    color: $color-texto;
}

p{
    color: $color-secundario;
}
//anidación
.caja{
    border: 1px solid black;
    width: 500px;
    margin: 0px auto;
    text-align: center;
    background-color: white;
    padding: 10px;
    h1{
        color: blue;
    }
    p{
        color: green;
    }
    .info{
        font-size: 10px;
        .author{
            font-size: 15px;
            color: orange;
        }
    }
}
//mixis / funciones
//mixis son funciones de un lenguaje de programación
//son un grupo de instrucciones que cuando las llame 
//se van a ejecutar ese conjunto de instrucciones

@mixin crearBordes($color, $size, $shadow){
    border: $size solid $color;
    border-radius: $size;
    box-shadow: 0px 0px $size $shadow;
}

.caja{
    @include crearBordes(red, 10px, black);
}
.listado{
    @include crearBordes(blue, 10px, red);
}

//herencia
/*
es traer los atributos base de css para que los pueda utiliza otra clase
no es algo revolucionario ya que en css nativo se podia hacer
se pueden cambiar ciertos atributos

*/
%alert-normal{
    border: 1px solid gray;
    background: #eeeeee;
    color: green;
    padding: 10px;
    width: 80%;
    margin: 20px auto;
}
.alert{
    @extend %alert-normal;
}
.alert-danger{
    @extend %alert-normal;
    color: red;
    border-color: red;
}

.alert-sucess{
    @extend %alert-normal;
    color: blue($color: #000000);
    border-color: blue;
}

//operadores

$caja: 200px;
$wrap: 900px;

h1{
    font-size: 20px+5px;
}
.cajas{
    width: 900px;
    clear: both;
    margin: 0px auto;
}

.caja{
    float: left;
    width: $caja /$wrap *100%; 
    margin: 10px;
}